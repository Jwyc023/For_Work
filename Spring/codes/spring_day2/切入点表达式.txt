
spring (pointcut)切入点表达式:

    作用: 主要是用来决定项目中那些组件中那些方法需要加入通知

    expression="切入点表达式"



    1.execution 切入点表达式   --->方法级别的切入点表达式  控制粒度: 方法级别   效率低

        完整语法:
                1.execution(访问权限修饰符 返回值 包名.类名.方法名(参数类型))
                2.execution(返回值 包名.类名.方法名(参数类型))
                  * 任意多个字符


        1).execution(* com.baizhi.service.*.*(..))              [比较多一种]
            包:      com.baizhi.service
            类:      任意类
            方法:     任意方法
            参数:     参数任意
            返回值:   任意返回值类型

        2).execution(String com.baizhi.service.*ServiceImpl.*(..))
            包:      com.baizhi.service
            类:      以ServiceImpl结尾的类
            方法:     方法名任意
            参数:     任意参数
            返回值:    返回值必须String类型相关方法

        3).execution(String com.baizhi.service.*Service*.*(String))
            包:      com.baizhi.service
            类:      类名中包含Service关键字的类
            方法:    任意
            参数:    参数只有一个类型必须是String
            返回值:  返回值必须是String

        4).execution(* com.baizhi.service..*.*(..))             [比较多一种]
            包:     com.baizhi.service及这个包中子包的子包
            类:     任意类
            方法:   任意方法
            参数:   任意参数
            返回值:  任意类型

        5).execution(* com.baizhi.service.*ServiceImpl.*(..)) [比较多一种]
            包:     com.baizhi.service 包
            类:     以ServiceImpl结尾的类
            方法:   任意方法
            参数:   任意参数
            返回值:  任意类型

        6).execution(* *.*(..))   //全部方法 避免使用这种方式
            包: 项目中所有包
            类: 项目中所有类
            方法: 所有方法
            参数: 所有参数
            返回值: 任意类型

            注意: 尽可能精准切入 避免不必要的切入






    2.within    切入点表达式   --->类级别的切入点表达式    控制粒度: 类级别    效率高  推荐

        expression="within()"

        完整语法:
            1. within(包.类名)

        1).within(com.baizhi.service.*ServiceImpl)


   =============================================================================


